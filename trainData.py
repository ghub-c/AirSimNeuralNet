# -*- coding: utf-8 -*-

from skimage import color
from skimage import io

#Image directory inside the project
IMAGEDIR = './images'

#File to store weights and biases
PARAMFILE = 'params.pkl'

#Number of images collected in the getData script
maximages = 10

#Parameters
#How quickly the network abandons old beliefs for new ones
learning_rate = 0.01
#Number of times the system goes through all the training samples
training_epochs = 500
#Number of samples propagated through the network
batch_size = 100
#To display logs per epoch step
display_step = 10


def main():
    
    #Convert images generated by the getData script to greyscale and flatten
    #Uses luminosity method 0.21R + 0.72G + 0.07B. Then flattens to a single layer
    images = []
    for k in range(maximages):
        image = color.rgb2gray(io.imread(IMAGEDIR + '/image%03d.png' % k))
        image = image.flatten()
        print(image)
#This executes main method automatically when we run the script
if __name__ == '__main__':
    
    main()